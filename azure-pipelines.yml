# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

#pool:
#  vmImage: ubuntu-latest
  
variables:
  imageName: 'rcmendes/quarkus-redis'
  serviceConnection: 'quayServiceConnection'
  roxCentralEndpoint: 'acs-data-clsuo50j3h5s6dovaj90.acs.rhcloud.com:443'
  
  
  
resources:
  repositories:
  - repository: ManifestsRepo
    type: github
    endpoint: github.com_raffamendes
    name: raffamendes/helm-charts 
    ref: main 

stages:
- stage: 'CI'
  displayName: 'Build and Push Image'
  jobs:
  - job: 'Build'
    displayName: 'Build and Push Image'
    pool:
      vmImage: ubuntu-latest
    steps:
      
    - task: Maven@3
      inputs:
        options: '-DskipTests' 
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '17'
        jdkArchitectureOption: 'x64'
        goals: 'package'

    - task: Docker@2
      displayName: Build from Red Hat Universal Base Image
      inputs:
        command: buildAndPush
        containerRegistry: $(serviceConnection)
        repository: $(imageName)
        Dockerfile: src/main/docker/Dockerfile.jvm
        buildContext: $(System.DefaultWorkingDirectory)
        tags: $(Build.SourceVersion)
  
        
    - script: |
             set +x
             export NO_COLOR="True"
             curl -k -L -H "Authorization: Bearer $ROX_API_TOKEN" "https://"$(roxCentralEndpoint)"/api/cli/download/roxctl-linux" --output ./roxctl
             chmod +x ./roxctl
             docker images
             IMAGE=$(docker images | grep quay | awk '{print $1}')
             TAG=$(docker images | grep quay | awk '{print $1}')
             ./roxctl image scan \
              "--insecure-skip-tls-verify" \
             -e "$(roxCentralEndpoint)" --image "$IMAGE:$TAG" \
             --output "json" 
      env:
        ROX_API_TOKEN: $(RoxApiToken)
      displayName: "ACS Image Scan"        
- stage: 'CD'
  displayName: "Update the manifest repo"
  dependsOn: 'CI'
  
  jobs:
  - job: 'CI'
    displayName: 'Update manifest repo'
    pool: 
      vmImage: ubuntu-latest
    steps:
    
    - checkout: ManifestsRepo
      persistCredentials: true
      
    - script: |
            apk add py3-pip jq
            pip install yq
            yq -iy '.image.tag = "$(Build.SourceVersion)"' charts/quarkus-redis/values.yaml
            git config --global user.email "azure@devops.com"
            git config --global user.name "Azure Pipelines"
            git add .
            git commit -m "[Azure Pipelines] Updating image tag"
            git push origin HEAD:main        
      displayName: 'Updating helm repo'
      
     
